@{
    ViewBag.Title = "Overview";
}
<h2>Distributed Agile Software Development Strategy</h2>

Framework is divided into four phases;
<ol>
    <li> Pre Development Phase</li>
    <li>Team Coordination Phase</li>
    <li>Distributed Agile Development Phase</li>
    <li>Post Agile Phase</li>
</ol>
<div>
    <h3>Phase 1: Pre Development Phase</h3>
    <p>In pre agile phase user requirements will be gather either the requirement may be some new requirement or some requirement change in existing requirement. Assistant project manager can make technical sheet of the requirement. Than we make a feature model from these requirement and make a collaborative design.</p>
</div>
<div>
    <h3>Phase 2: Team Coordination Phase</h3>
    <p>The team need to coordinate throughout the development process. The sufficient daily communication and interaction is required for good coordination among team members. And it is the responsibility of team leaders to make a cross functional team therefore we define boundary spanning behavior for agile managers and leaders. Boundary management in projects and its impact on team is increased. But the recent explorations seem to lack empirical evidence on understanding the particular behaviors of a leader, which may affect the team performance positively and are frequently used by project managers. In Pakistan, software project managers face ever-changing environment and they have to manage both inner and outer boundaries; it is of great importance to know which boundary-spanning behaviors are more practical to implement. Particular boundary spanning behaviors which have positive impact and can improve project team performance. Boundary-spanning behaviors used by project leaders include buffering, representing, collaborating, negotiating and external monitoring. Boundary spanning behaviors have positive influence on project team performance and they are highly significant for the team performance. Negotiation is the most important and prominent behavior among all boundary spanning behaviors.</p>
    <p>In our proposed model we define positive boundary spanning behavior for project managers and team leaders: Buffering , Networking, External Watching, Negotiating. </p>
<p>Local manager organize the team based on these parameters: Physical Proximity, Distance, Situational Factors, Schedule.</p>
</div>
<div>
    <h3>Phase 3: Development Phase</h3>
    <p>Scrum can practices provide agility to small and medium size projects and also scalable for large projects. According to previous empirical data we get that scrum is mostly used in Pakistan therefore we tailor scrum and XP practices in the development phase. Our multisite Scrum Team consist of 5 to 9 people distributed over N local locations. In Pakistan local team are usually distributed on these levels i.e. Level 0, Level 1, Level 2, Level.</p>
</div>
<div>
    <h3>Phase 4: Post Development Phase</h3>
    <p>The post development can save the project status and its ROI and make an electronic repository of experience factory. Experience factory is a quality Improvement Paradigm is based upon the notion that improving the software process and product requires the continual accumulation of evaluated experiences (learning) in a form that can be effectively understood and modified (experience models) into a repository of integrated experience models (experience base) that can be accessed and modified to meet the needs of the current project (reuse). The paradigm implies the logical separation of project development (performed by the Project Organization) from the systematic learning and packaging of reusable experiences (performed by the Experience Factory) The Experience Factory is a logical and/or physical organization that supports project developments by analyzing and synthesizing all kinds of experience, acting as a repository for such experience, and supplying that experience to various projects on demand. It packages experience by building informal, formal or schematized, and productized models and measures of various software processes, products, and other forms of knowledge via people, documents, and automated support.</p>
</div>